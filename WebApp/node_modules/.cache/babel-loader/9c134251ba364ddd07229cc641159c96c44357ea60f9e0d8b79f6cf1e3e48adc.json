{"ast":null,"code":"define([\"../core\", \"../core/camelCase\", \"../var/rnothtmlwhite\", \"./var/acceptData\"], function (jQuery, camelCase, rnothtmlwhite, acceptData) {\n  \"use strict\";\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function (owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando];\n\n      // If not, create one\n      if (!value) {\n        value = {};\n\n        // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see trac-8335.\n        // Always return an empty object.\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value;\n\n            // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n      return value;\n    },\n    set: function (owner, data, value) {\n      var prop,\n        cache = this.cache(owner);\n\n      // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value;\n\n        // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n      return cache;\n    },\n    get: function (owner, key) {\n      return key === undefined ? this.cache(owner) :\n      // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function (owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      }\n\n      // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n      this.set(owner, key, value);\n\n      // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n      return value !== undefined ? value : key;\n    },\n    remove: function (owner, key) {\n      var i,\n        cache = owner[this.expando];\n      if (cache === undefined) {\n        return;\n      }\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key);\n\n          // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n        i = key.length;\n        while (i--) {\n          delete cache[key[i]];\n        }\n      }\n\n      // Remove the expando if there's no more data\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function (owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  return Data;\n});","map":{"version":3,"names":["define","jQuery","camelCase","rnothtmlwhite","acceptData","Data","expando","uid","prototype","cache","owner","value","nodeType","Object","defineProperty","configurable","set","data","prop","get","key","undefined","access","remove","i","Array","isArray","map","match","length","isEmptyObject","hasData"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/node_modules/jquery/src/data/Data.js"],"sourcesContent":["define( [\n\t\"../core\",\n\t\"../core/camelCase\",\n\t\"../var/rnothtmlwhite\",\n\t\"./var/acceptData\"\n], function( jQuery, camelCase, rnothtmlwhite, acceptData ) {\n\n\"use strict\";\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see trac-8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\n\nreturn Data;\n} );\n"],"mappings":"AAAAA,MAAM,CAAE,CACP,SAAS,EACT,mBAAmB,EACnB,sBAAsB,EACtB,kBAAkB,CAClB,EAAE,UAAUC,MAAM,EAAEC,SAAS,EAAEC,aAAa,EAAEC,UAAU,EAAG;EAE5D,YAAY;;EAEZ,SAASC,IAAIA,CAAA,EAAG;IACf,IAAI,CAACC,OAAO,GAAGL,MAAM,CAACK,OAAO,GAAGD,IAAI,CAACE,GAAG,EAAE;EAC3C;EAEAF,IAAI,CAACE,GAAG,GAAG,CAAC;EAEZF,IAAI,CAACG,SAAS,GAAG;IAEhBC,KAAK,EAAE,SAAAA,CAAUC,KAAK,EAAG;MAExB;MACA,IAAIC,KAAK,GAAGD,KAAK,CAAE,IAAI,CAACJ,OAAO,CAAE;;MAEjC;MACA,IAAK,CAACK,KAAK,EAAG;QACbA,KAAK,GAAG,CAAC,CAAC;;QAEV;QACA;QACA;QACA,IAAKP,UAAU,CAAEM,KAAK,CAAE,EAAG;UAE1B;UACA;UACA,IAAKA,KAAK,CAACE,QAAQ,EAAG;YACrBF,KAAK,CAAE,IAAI,CAACJ,OAAO,CAAE,GAAGK,KAAK;;YAE9B;YACA;YACA;UACA,CAAC,MAAM;YACNE,MAAM,CAACC,cAAc,CAAEJ,KAAK,EAAE,IAAI,CAACJ,OAAO,EAAE;cAC3CK,KAAK,EAAEA,KAAK;cACZI,YAAY,EAAE;YACf,CAAC,CAAE;UACJ;QACD;MACD;MAEA,OAAOJ,KAAK;IACb,CAAC;IACDK,GAAG,EAAE,SAAAA,CAAUN,KAAK,EAAEO,IAAI,EAAEN,KAAK,EAAG;MACnC,IAAIO,IAAI;QACPT,KAAK,GAAG,IAAI,CAACA,KAAK,CAAEC,KAAK,CAAE;;MAE5B;MACA;MACA,IAAK,OAAOO,IAAI,KAAK,QAAQ,EAAG;QAC/BR,KAAK,CAAEP,SAAS,CAAEe,IAAI,CAAE,CAAE,GAAGN,KAAK;;QAEnC;MACA,CAAC,MAAM;QAEN;QACA,KAAMO,IAAI,IAAID,IAAI,EAAG;UACpBR,KAAK,CAAEP,SAAS,CAAEgB,IAAI,CAAE,CAAE,GAAGD,IAAI,CAAEC,IAAI,CAAE;QAC1C;MACD;MACA,OAAOT,KAAK;IACb,CAAC;IACDU,GAAG,EAAE,SAAAA,CAAUT,KAAK,EAAEU,GAAG,EAAG;MAC3B,OAAOA,GAAG,KAAKC,SAAS,GACvB,IAAI,CAACZ,KAAK,CAAEC,KAAK,CAAE;MAEnB;MACAA,KAAK,CAAE,IAAI,CAACJ,OAAO,CAAE,IAAII,KAAK,CAAE,IAAI,CAACJ,OAAO,CAAE,CAAEJ,SAAS,CAAEkB,GAAG,CAAE,CAAE;IACpE,CAAC;IACDE,MAAM,EAAE,SAAAA,CAAUZ,KAAK,EAAEU,GAAG,EAAET,KAAK,EAAG;MAErC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAKS,GAAG,KAAKC,SAAS,IAChBD,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAMT,KAAK,KAAKU,SAAW,EAAG;QAEjE,OAAO,IAAI,CAACF,GAAG,CAAET,KAAK,EAAEU,GAAG,CAAE;MAC9B;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACJ,GAAG,CAAEN,KAAK,EAAEU,GAAG,EAAET,KAAK,CAAE;;MAE7B;MACA;MACA,OAAOA,KAAK,KAAKU,SAAS,GAAGV,KAAK,GAAGS,GAAG;IACzC,CAAC;IACDG,MAAM,EAAE,SAAAA,CAAUb,KAAK,EAAEU,GAAG,EAAG;MAC9B,IAAII,CAAC;QACJf,KAAK,GAAGC,KAAK,CAAE,IAAI,CAACJ,OAAO,CAAE;MAE9B,IAAKG,KAAK,KAAKY,SAAS,EAAG;QAC1B;MACD;MAEA,IAAKD,GAAG,KAAKC,SAAS,EAAG;QAExB;QACA,IAAKI,KAAK,CAACC,OAAO,CAAEN,GAAG,CAAE,EAAG;UAE3B;UACA;UACAA,GAAG,GAAGA,GAAG,CAACO,GAAG,CAAEzB,SAAS,CAAE;QAC3B,CAAC,MAAM;UACNkB,GAAG,GAAGlB,SAAS,CAAEkB,GAAG,CAAE;;UAEtB;UACA;UACAA,GAAG,GAAGA,GAAG,IAAIX,KAAK,GACjB,CAAEW,GAAG,CAAE,GACLA,GAAG,CAACQ,KAAK,CAAEzB,aAAa,CAAE,IAAI,EAAI;QACtC;QAEAqB,CAAC,GAAGJ,GAAG,CAACS,MAAM;QAEd,OAAQL,CAAC,EAAE,EAAG;UACb,OAAOf,KAAK,CAAEW,GAAG,CAAEI,CAAC,CAAE,CAAE;QACzB;MACD;;MAEA;MACA,IAAKJ,GAAG,KAAKC,SAAS,IAAIpB,MAAM,CAAC6B,aAAa,CAAErB,KAAK,CAAE,EAAG;QAEzD;QACA;QACA;QACA;QACA,IAAKC,KAAK,CAACE,QAAQ,EAAG;UACrBF,KAAK,CAAE,IAAI,CAACJ,OAAO,CAAE,GAAGe,SAAS;QAClC,CAAC,MAAM;UACN,OAAOX,KAAK,CAAE,IAAI,CAACJ,OAAO,CAAE;QAC7B;MACD;IACD,CAAC;IACDyB,OAAO,EAAE,SAAAA,CAAUrB,KAAK,EAAG;MAC1B,IAAID,KAAK,GAAGC,KAAK,CAAE,IAAI,CAACJ,OAAO,CAAE;MACjC,OAAOG,KAAK,KAAKY,SAAS,IAAI,CAACpB,MAAM,CAAC6B,aAAa,CAAErB,KAAK,CAAE;IAC7D;EACD,CAAC;EAED,OAAOJ,IAAI;AACX,CAAC,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}