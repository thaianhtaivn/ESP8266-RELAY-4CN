{"ast":null,"code":"define([\"../core\", \"../var/isFunction\", \"./var/nonce\", \"./var/rquery\", \"../ajax\"], function (jQuery, isFunction, nonce, rquery) {\n  \"use strict\";\n\n  var oldCallbacks = [],\n    rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n  // Default jsonp settings\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function () {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    }\n  });\n\n  // Detect, normalize options and install callbacks for jsonp requests\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n      overwritten,\n      responseContainer,\n      jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\");\n\n    // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n\n      // Insert callback into url or form data\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      }\n\n      // Use data converter to retrieve json after script execution\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n        return responseContainer[0];\n      };\n\n      // Force json dataType\n      s.dataTypes[0] = \"json\";\n\n      // Install callback\n      overwritten = window[callbackName];\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      };\n\n      // Clean-up function (fires after converters)\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName);\n\n          // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        }\n\n        // Save back as free\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback;\n\n          // Save the callback name for future use\n          oldCallbacks.push(callbackName);\n        }\n\n        // Call if it was a function and we have a response\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n        responseContainer = overwritten = undefined;\n      });\n\n      // Delegate to script\n      return \"script\";\n    }\n  });\n});","map":{"version":3,"names":["define","jQuery","isFunction","nonce","rquery","oldCallbacks","rjsonp","ajaxSetup","jsonp","jsonpCallback","callback","pop","expando","guid","ajaxPrefilter","s","originalSettings","jqXHR","callbackName","overwritten","responseContainer","jsonProp","test","url","data","contentType","indexOf","dataTypes","replace","converters","error","window","arguments","always","undefined","removeProp","push"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/node_modules/jquery/src/ajax/jsonp.js"],"sourcesContent":["define( [\n\t\"../core\",\n\t\"../var/isFunction\",\n\t\"./var/nonce\",\n\t\"./var/rquery\",\n\t\"../ajax\"\n], function( jQuery, isFunction, nonce, rquery ) {\n\n\"use strict\";\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n} );\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}