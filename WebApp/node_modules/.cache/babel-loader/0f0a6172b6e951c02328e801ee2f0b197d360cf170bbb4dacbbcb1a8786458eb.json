{"ast":null,"code":"define([\"../core\", \"../var/document\", \"./var/rsingleTag\", \"../manipulation/buildFragment\",\n// This is the only module that needs core/support\n\"./support\"], function (jQuery, document, rsingleTag, buildFragment, support) {\n  \"use strict\";\n\n  // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n    var base, parsed, scripts;\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\");\n\n        // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && [];\n\n    // Single tag\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n    parsed = buildFragment([data], context, scripts);\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n    return jQuery.merge([], parsed.childNodes);\n  };\n  return jQuery.parseHTML;\n});","map":{"version":3,"names":["define","jQuery","document","rsingleTag","buildFragment","support","parseHTML","data","context","keepScripts","base","parsed","scripts","createHTMLDocument","implementation","createElement","href","location","head","appendChild","exec","length","remove","merge","childNodes"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/node_modules/jquery/src/core/parseHTML.js"],"sourcesContent":["define( [\n\t\"../core\",\n\t\"../var/document\",\n\t\"./var/rsingleTag\",\n\t\"../manipulation/buildFragment\",\n\n\t// This is the only module that needs core/support\n\t\"./support\"\n], function( jQuery, document, rsingleTag, buildFragment, support ) {\n\n\"use strict\";\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\nreturn jQuery.parseHTML;\n\n} );\n"],"mappings":"AAAAA,MAAM,CAAE,CACP,SAAS,EACT,iBAAiB,EACjB,kBAAkB,EAClB,+BAA+B;AAE/B;AACA,WAAW,CACX,EAAE,UAAUC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,aAAa,EAAEC,OAAO,EAAG;EAEpE,YAAY;;EAEZ;EACA;EACA;EACA;EACAJ,MAAM,CAACK,SAAS,GAAG,UAAUC,IAAI,EAAEC,OAAO,EAAEC,WAAW,EAAG;IACzD,IAAK,OAAOF,IAAI,KAAK,QAAQ,EAAG;MAC/B,OAAO,EAAE;IACV;IACA,IAAK,OAAOC,OAAO,KAAK,SAAS,EAAG;MACnCC,WAAW,GAAGD,OAAO;MACrBA,OAAO,GAAG,KAAK;IAChB;IAEA,IAAIE,IAAI,EAAEC,MAAM,EAAEC,OAAO;IAEzB,IAAK,CAACJ,OAAO,EAAG;MAEf;MACA;MACA,IAAKH,OAAO,CAACQ,kBAAkB,EAAG;QACjCL,OAAO,GAAGN,QAAQ,CAACY,cAAc,CAACD,kBAAkB,CAAE,EAAE,CAAE;;QAE1D;QACA;QACA;QACAH,IAAI,GAAGF,OAAO,CAACO,aAAa,CAAE,MAAM,CAAE;QACtCL,IAAI,CAACM,IAAI,GAAGd,QAAQ,CAACe,QAAQ,CAACD,IAAI;QAClCR,OAAO,CAACU,IAAI,CAACC,WAAW,CAAET,IAAI,CAAE;MACjC,CAAC,MAAM;QACNF,OAAO,GAAGN,QAAQ;MACnB;IACD;IAEAS,MAAM,GAAGR,UAAU,CAACiB,IAAI,CAAEb,IAAI,CAAE;IAChCK,OAAO,GAAG,CAACH,WAAW,IAAI,EAAE;;IAE5B;IACA,IAAKE,MAAM,EAAG;MACb,OAAO,CAAEH,OAAO,CAACO,aAAa,CAAEJ,MAAM,CAAE,CAAC,CAAE,CAAE,CAAE;IAChD;IAEAA,MAAM,GAAGP,aAAa,CAAE,CAAEG,IAAI,CAAE,EAAEC,OAAO,EAAEI,OAAO,CAAE;IAEpD,IAAKA,OAAO,IAAIA,OAAO,CAACS,MAAM,EAAG;MAChCpB,MAAM,CAAEW,OAAO,CAAE,CAACU,MAAM,EAAE;IAC3B;IAEA,OAAOrB,MAAM,CAACsB,KAAK,CAAE,EAAE,EAAEZ,MAAM,CAACa,UAAU,CAAE;EAC7C,CAAC;EAED,OAAOvB,MAAM,CAACK,SAAS;AAEvB,CAAC,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}