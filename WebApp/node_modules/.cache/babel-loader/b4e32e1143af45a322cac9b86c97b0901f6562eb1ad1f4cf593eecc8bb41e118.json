{"ast":null,"code":"define([\"../core\", \"../core/stripAndCollapse\", \"../var/isFunction\", \"../core/parseHTML\", \"../ajax\", \"../traversing\", \"../manipulation\", \"../selector\"], function (jQuery, stripAndCollapse, isFunction) {\n  \"use strict\";\n\n  /**\n   * Load a url into a page\n   */\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n      type,\n      response,\n      self = this,\n      off = url.indexOf(\" \");\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    }\n\n    // If it's a function\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined;\n\n      // Otherwise, build a param string\n    } else if (params && typeof params === \"object\") {\n      type = \"POST\";\n    }\n\n    // If we have elements to modify, make the request\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ?\n        // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) :\n        // Otherwise use the full result\n        responseText);\n\n        // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n    return this;\n  };\n});","map":{"version":3,"names":["define","jQuery","stripAndCollapse","isFunction","fn","load","url","params","callback","selector","type","response","self","off","indexOf","slice","undefined","length","ajax","dataType","data","done","responseText","arguments","html","append","parseHTML","find","always","jqXHR","status","each","apply"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/node_modules/jquery/src/ajax/load.js"],"sourcesContent":["define( [\n\t\"../core\",\n\t\"../core/stripAndCollapse\",\n\t\"../var/isFunction\",\n\t\"../core/parseHTML\",\n\t\"../ajax\",\n\t\"../traversing\",\n\t\"../manipulation\",\n\t\"../selector\"\n], function( jQuery, stripAndCollapse, isFunction ) {\n\n\"use strict\";\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n} );\n"],"mappings":"AAAAA,MAAM,CAAE,CACP,SAAS,EACT,0BAA0B,EAC1B,mBAAmB,EACnB,mBAAmB,EACnB,SAAS,EACT,eAAe,EACf,iBAAiB,EACjB,aAAa,CACb,EAAE,UAAUC,MAAM,EAAEC,gBAAgB,EAAEC,UAAU,EAAG;EAEpD,YAAY;;EAEZ;AACA;AACA;EACAF,MAAM,CAACG,EAAE,CAACC,IAAI,GAAG,UAAUC,GAAG,EAAEC,MAAM,EAAEC,QAAQ,EAAG;IAClD,IAAIC,QAAQ;MAAEC,IAAI;MAAEC,QAAQ;MAC3BC,IAAI,GAAG,IAAI;MACXC,GAAG,GAAGP,GAAG,CAACQ,OAAO,CAAE,GAAG,CAAE;IAEzB,IAAKD,GAAG,GAAG,CAAC,CAAC,EAAG;MACfJ,QAAQ,GAAGP,gBAAgB,CAAEI,GAAG,CAACS,KAAK,CAAEF,GAAG,CAAE,CAAE;MAC/CP,GAAG,GAAGA,GAAG,CAACS,KAAK,CAAE,CAAC,EAAEF,GAAG,CAAE;IAC1B;;IAEA;IACA,IAAKV,UAAU,CAAEI,MAAM,CAAE,EAAG;MAE3B;MACAC,QAAQ,GAAGD,MAAM;MACjBA,MAAM,GAAGS,SAAS;;MAEnB;IACA,CAAC,MAAM,IAAKT,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAG;MAClDG,IAAI,GAAG,MAAM;IACd;;IAEA;IACA,IAAKE,IAAI,CAACK,MAAM,GAAG,CAAC,EAAG;MACtBhB,MAAM,CAACiB,IAAI,CAAE;QACZZ,GAAG,EAAEA,GAAG;QAER;QACA;QACA;QACAI,IAAI,EAAEA,IAAI,IAAI,KAAK;QACnBS,QAAQ,EAAE,MAAM;QAChBC,IAAI,EAAEb;MACP,CAAC,CAAE,CAACc,IAAI,CAAE,UAAUC,YAAY,EAAG;QAElC;QACAX,QAAQ,GAAGY,SAAS;QAEpBX,IAAI,CAACY,IAAI,CAAEf,QAAQ;QAElB;QACA;QACAR,MAAM,CAAE,OAAO,CAAE,CAACwB,MAAM,CAAExB,MAAM,CAACyB,SAAS,CAAEJ,YAAY,CAAE,CAAE,CAACK,IAAI,CAAElB,QAAQ,CAAE;QAE7E;QACAa,YAAY,CAAE;;QAEhB;QACA;QACA;MACA,CAAC,CAAE,CAACM,MAAM,CAAEpB,QAAQ,IAAI,UAAUqB,KAAK,EAAEC,MAAM,EAAG;QACjDlB,IAAI,CAACmB,IAAI,CAAE,YAAW;UACrBvB,QAAQ,CAACwB,KAAK,CAAE,IAAI,EAAErB,QAAQ,IAAI,CAAEkB,KAAK,CAACP,YAAY,EAAEQ,MAAM,EAAED,KAAK,CAAE,CAAE;QAC1E,CAAC,CAAE;MACJ,CAAC,CAAE;IACJ;IAEA,OAAO,IAAI;EACZ,CAAC;AAED,CAAC,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}