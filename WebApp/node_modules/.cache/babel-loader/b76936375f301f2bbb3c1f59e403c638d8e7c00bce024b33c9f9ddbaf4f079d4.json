{"ast":null,"code":"'use strict';\n\nvar Transform = require('readable-stream').Transform;\nvar duplexify = require('duplexify');\nvar WS = require('ws');\nvar Buffer = require('safe-buffer').Buffer;\nmodule.exports = WebSocketStream;\nfunction buildProxy(options, socketWrite, socketEnd) {\n  var proxy = new Transform({\n    objectMode: options.objectMode\n  });\n  proxy._write = socketWrite;\n  proxy._flush = socketEnd;\n  return proxy;\n}\nfunction WebSocketStream(target, protocols, options) {\n  var stream, socket;\n  var isBrowser = process.title === 'browser';\n  var isNative = !!global.WebSocket;\n  var socketWrite = isBrowser ? socketWriteBrowser : socketWriteNode;\n  if (protocols && !Array.isArray(protocols) && 'object' === typeof protocols) {\n    // accept the \"options\" Object as the 2nd argument\n    options = protocols;\n    protocols = null;\n    if (typeof options.protocol === 'string' || Array.isArray(options.protocol)) {\n      protocols = options.protocol;\n    }\n  }\n  if (!options) options = {};\n  if (options.objectMode === undefined) {\n    options.objectMode = !(options.binary === true || options.binary === undefined);\n  }\n  var proxy = buildProxy(options, socketWrite, socketEnd);\n  if (!options.objectMode) {\n    proxy._writev = writev;\n  }\n\n  // browser only: sets the maximum socket buffer size before throttling\n  var bufferSize = options.browserBufferSize || 1024 * 512;\n\n  // browser only: how long to wait when throttling\n  var bufferTimeout = options.browserBufferTimeout || 1000;\n\n  // use existing WebSocket object that was passed in\n  if (typeof target === 'object') {\n    socket = target;\n    // otherwise make a new one\n  } else {\n    // special constructor treatment for native websockets in browsers, see\n    // https://github.com/maxogden/websocket-stream/issues/82\n    if (isNative && isBrowser) {\n      socket = new WS(target, protocols);\n    } else {\n      socket = new WS(target, protocols, options);\n    }\n    socket.binaryType = 'arraybuffer';\n  }\n\n  // according to https://github.com/baygeldin/ws-streamify/issues/1\n  // Nodejs WebSocketServer cause memory leak\n  // Handlers like onerror, onclose, onmessage and onopen are accessible via setter/getter\n  // And setter first of all fires removeAllListeners, that doesnt make inner array of clients on WebSocketServer cleared ever\n  var eventListenerSupport = 'undefined' === typeof socket.addEventListener;\n\n  // was already open when passed in\n  if (socket.readyState === socket.OPEN) {\n    stream = proxy;\n  } else {\n    stream = stream = duplexify(undefined, undefined, options);\n    if (!options.objectMode) {\n      stream._writev = writev;\n    }\n    if (eventListenerSupport) {\n      socket.addEventListener('open', onopen);\n    } else {\n      socket.onopen = onopen;\n    }\n  }\n  stream.socket = socket;\n  if (eventListenerSupport) {\n    socket.addEventListener('close', onclose);\n    socket.addEventListener('error', onerror);\n    socket.addEventListener('message', onmessage);\n  } else {\n    socket.onclose = onclose;\n    socket.onerror = onerror;\n    socket.onmessage = onmessage;\n  }\n  proxy.on('close', destroy);\n  var coerceToBuffer = !options.objectMode;\n  function socketWriteNode(chunk, enc, next) {\n    // avoid errors, this never happens unless\n    // destroy() is called\n    if (socket.readyState !== socket.OPEN) {\n      next();\n      return;\n    }\n    if (coerceToBuffer && typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, 'utf8');\n    }\n    socket.send(chunk, next);\n  }\n  function socketWriteBrowser(chunk, enc, next) {\n    if (socket.bufferedAmount > bufferSize) {\n      setTimeout(socketWriteBrowser, bufferTimeout, chunk, enc, next);\n      return;\n    }\n    if (coerceToBuffer && typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, 'utf8');\n    }\n    try {\n      socket.send(chunk);\n    } catch (err) {\n      return next(err);\n    }\n    next();\n  }\n  function socketEnd(done) {\n    socket.close();\n    done();\n  }\n  function onopen() {\n    stream.setReadable(proxy);\n    stream.setWritable(proxy);\n    stream.emit('connect');\n  }\n  function onclose() {\n    stream.end();\n    stream.destroy();\n  }\n  function onerror(err) {\n    stream.destroy(err);\n  }\n  function onmessage(event) {\n    var data = event.data;\n    if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, 'utf8');\n    proxy.push(data);\n  }\n  function destroy() {\n    socket.close();\n  }\n\n  // this is to be enabled only if objectMode is false\n  function writev(chunks, cb) {\n    var buffers = new Array(chunks.length);\n    for (var i = 0; i < chunks.length; i++) {\n      if (typeof chunks[i].chunk === 'string') {\n        buffers[i] = Buffer.from(chunks[i], 'utf8');\n      } else {\n        buffers[i] = chunks[i].chunk;\n      }\n    }\n    this._write(Buffer.concat(buffers), 'binary', cb);\n  }\n  return stream;\n}","map":{"version":3,"names":["Transform","require","duplexify","WS","Buffer","module","exports","WebSocketStream","buildProxy","options","socketWrite","socketEnd","proxy","objectMode","_write","_flush","target","protocols","stream","socket","isBrowser","process","title","isNative","global","WebSocket","socketWriteBrowser","socketWriteNode","Array","isArray","protocol","undefined","binary","_writev","writev","bufferSize","browserBufferSize","bufferTimeout","browserBufferTimeout","binaryType","eventListenerSupport","addEventListener","readyState","OPEN","onopen","onclose","onerror","onmessage","on","destroy","coerceToBuffer","chunk","enc","next","from","send","bufferedAmount","setTimeout","err","done","close","setReadable","setWritable","emit","end","event","data","ArrayBuffer","push","chunks","cb","buffers","length","i","concat"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/node_modules/websocket-stream/stream.js"],"sourcesContent":["'use strict'\n\nvar Transform = require('readable-stream').Transform\nvar duplexify = require('duplexify')\nvar WS = require('ws')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = WebSocketStream\n\nfunction buildProxy (options, socketWrite, socketEnd) {\n  var proxy = new Transform({\n    objectMode: options.objectMode\n  })\n\n  proxy._write = socketWrite\n  proxy._flush = socketEnd\n\n  return proxy\n}\n\nfunction WebSocketStream(target, protocols, options) {\n  var stream, socket\n\n  var isBrowser = process.title === 'browser'\n  var isNative = !!global.WebSocket\n  var socketWrite = isBrowser ? socketWriteBrowser : socketWriteNode\n\n  if (protocols && !Array.isArray(protocols) && 'object' === typeof protocols) {\n    // accept the \"options\" Object as the 2nd argument\n    options = protocols\n    protocols = null\n\n    if (typeof options.protocol === 'string' || Array.isArray(options.protocol)) {\n      protocols = options.protocol;\n    }\n  }\n\n  if (!options) options = {}\n\n  if (options.objectMode === undefined) {\n    options.objectMode = !(options.binary === true || options.binary === undefined)\n  }\n\n  var proxy = buildProxy(options, socketWrite, socketEnd)\n\n  if (!options.objectMode) {\n    proxy._writev = writev\n  }\n\n  // browser only: sets the maximum socket buffer size before throttling\n  var bufferSize = options.browserBufferSize || 1024 * 512\n\n  // browser only: how long to wait when throttling\n  var bufferTimeout = options.browserBufferTimeout || 1000\n\n  // use existing WebSocket object that was passed in\n  if (typeof target === 'object') {\n    socket = target\n  // otherwise make a new one\n  } else {\n    // special constructor treatment for native websockets in browsers, see\n    // https://github.com/maxogden/websocket-stream/issues/82\n    if (isNative && isBrowser) {\n      socket = new WS(target, protocols)\n    } else {\n      socket = new WS(target, protocols, options)\n    }\n\n    socket.binaryType = 'arraybuffer'\n  }\n  \n  // according to https://github.com/baygeldin/ws-streamify/issues/1\n  // Nodejs WebSocketServer cause memory leak\n  // Handlers like onerror, onclose, onmessage and onopen are accessible via setter/getter\n  // And setter first of all fires removeAllListeners, that doesnt make inner array of clients on WebSocketServer cleared ever\n  var eventListenerSupport = ('undefined' === typeof socket.addEventListener)\n\n  // was already open when passed in\n  if (socket.readyState === socket.OPEN) {\n    stream = proxy\n  } else {\n    stream = stream = duplexify(undefined, undefined, options)\n    if (!options.objectMode) {\n      stream._writev = writev\n    }\n    \n    if (eventListenerSupport) {\n       socket.addEventListener('open', onopen)\n    } else {\n       socket.onopen = onopen\n    }\n  }\n\n  stream.socket = socket\n\n  if (eventListenerSupport) {\n     socket.addEventListener('close', onclose)\n     socket.addEventListener('error', onerror)\n     socket.addEventListener('message', onmessage)\n  } else {\n     socket.onclose = onclose\n     socket.onerror = onerror\n     socket.onmessage = onmessage\n  }\n\n  proxy.on('close', destroy)\n\n  var coerceToBuffer = !options.objectMode\n\n  function socketWriteNode(chunk, enc, next) {\n    // avoid errors, this never happens unless\n    // destroy() is called\n    if (socket.readyState !== socket.OPEN) {\n      next()\n      return\n    }\n\n    if (coerceToBuffer && typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, 'utf8')\n    }\n    socket.send(chunk, next)\n  }\n\n  function socketWriteBrowser(chunk, enc, next) {\n    if (socket.bufferedAmount > bufferSize) {\n      setTimeout(socketWriteBrowser, bufferTimeout, chunk, enc, next)\n      return\n    }\n\n    if (coerceToBuffer && typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, 'utf8')\n    }\n\n    try {\n      socket.send(chunk)\n    } catch(err) {\n      return next(err)\n    }\n\n    next()\n  }\n\n  function socketEnd(done) {\n    socket.close()\n    done()\n  }\n\n  function onopen() {\n    stream.setReadable(proxy)\n    stream.setWritable(proxy)\n    stream.emit('connect')\n  }\n\n  function onclose() {\n    stream.end()\n    stream.destroy()\n  }\n\n  function onerror(err) {\n    stream.destroy(err)\n  }\n\n  function onmessage(event) {\n    var data = event.data\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\n    else data = Buffer.from(data, 'utf8')\n    proxy.push(data)\n  }\n\n  function destroy() {\n    socket.close()\n  }\n\n  // this is to be enabled only if objectMode is false\n  function writev (chunks, cb) {\n    var buffers = new Array(chunks.length)\n    for (var i = 0; i < chunks.length; i++) {\n      if (typeof chunks[i].chunk === 'string') {\n        buffers[i] = Buffer.from(chunks[i], 'utf8')\n      } else {\n        buffers[i] = chunks[i].chunk\n      }\n    }\n\n    this._write(Buffer.concat(buffers), 'binary', cb)\n  }\n\n  return stream\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}