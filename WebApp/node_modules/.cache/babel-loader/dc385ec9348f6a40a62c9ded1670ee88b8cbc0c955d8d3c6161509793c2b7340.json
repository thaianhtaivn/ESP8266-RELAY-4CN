{"ast":null,"code":"var _jsxFileName = \"/Users/thaitai/Desktop/Work/IoT/relay-web-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.scss\";\nimport { Client } from \"paho-mqtt\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [relayData, setrelayData] = useState([{\n    name: \"RELAY 1\",\n    state: true\n  }, {\n    name: \"RELAY 2\",\n    state: true\n  }, {\n    name: \"RELAY 3\",\n    state: false\n  }, {\n    name: \"RELAY 4\",\n    state: false\n  }]);\n  // const client = new Client(\"mqtts://42c1410bece7497a99cfa15427041510.s2.eu.hivemq.cloud:8333\", \"client-id\");\n  const options = {\n    host: \"42c1410bece7497a99cfa15427041510.s2.eu.hivemq.cloud\",\n    port: 8884,\n    protocol: \"mqtts\",\n    username: \"thaianhtaivn\",\n    password: \"159734628\",\n    clientId: \"my-client-id\"\n  };\n  useEffect(() => {\n    const client = new Client(options.host, options.port, options.clientId);\n    function connect() {\n      // set callback handlers\n      client.onConnectionLost = onConnectionLost;\n      client.onMessageArrived = onMessageArrived;\n\n      // set options\n      const connectOptions = {\n        onSuccess: onConnect,\n        useSSL: true,\n        userName: options.username,\n        password: options.password\n      };\n\n      // connect the client\n      client.connect(connectOptions);\n    }\n    function onConnect() {\n      console.log(\"Connected to HiveMQ broker\");\n      client.subscribe(\"Hello\");\n    }\n    function onConnectionLost(responseObject) {\n      if (responseObject.errorCode !== 0) {\n        console.log(\"Connection lost:\", responseObject.errorMessage);\n      }\n    }\n    function onMessageArrived(message) {\n      console.log(\"Received message:\", message.payloadString);\n      // setMessages((messages) => [...messages, message.payloadString]);\n    }\n\n    connect();\n    return () => {\n      client.disconnect();\n    };\n  }, []);\n  function handleSwitch(data) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"RELAY CONTROLLER APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch-btns\",\n      children: Object.values(relayData).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"switch-1\",\n          defaultChecked: item.state,\n          onChange: handleSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/IzivxHD/NkvqKWchEAp16K1RKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Client","useState","useEffect","jsxDEV","_jsxDEV","App","_s","relayData","setrelayData","name","state","options","host","port","protocol","username","password","clientId","client","connect","onConnectionLost","onMessageArrived","connectOptions","onSuccess","onConnect","useSSL","userName","console","log","subscribe","responseObject","errorCode","errorMessage","message","payloadString","disconnect","handleSwitch","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","item","index","type","id","defaultChecked","onChange","_c","$RefreshReg$"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/src/App.js"],"sourcesContent":["import \"./App.scss\";\nimport { Client } from \"paho-mqtt\";\nimport { useState, useEffect } from \"react\";\nfunction App() {\n  const [relayData, setrelayData] = useState([\n    {\n      name: \"RELAY 1\",\n      state: true,\n    },\n    {\n      name: \"RELAY 2\",\n      state: true,\n    },\n    {\n      name: \"RELAY 3\",\n      state: false,\n    },\n    {\n      name: \"RELAY 4\",\n      state: false,\n    },\n  ]);\n  // const client = new Client(\"mqtts://42c1410bece7497a99cfa15427041510.s2.eu.hivemq.cloud:8333\", \"client-id\");\n  const options = {\n    host: \"42c1410bece7497a99cfa15427041510.s2.eu.hivemq.cloud\",\n    port: 8884,\n    protocol: \"mqtts\",\n    username: \"thaianhtaivn\",\n    password: \"159734628\",\n    clientId: \"my-client-id\",\n  };\n  useEffect(() => {\n    const client = new Client(options.host, options.port, options.clientId);\n\n    function connect() {\n      // set callback handlers\n      client.onConnectionLost = onConnectionLost;\n      client.onMessageArrived = onMessageArrived;\n\n      // set options\n      const connectOptions = {\n        onSuccess: onConnect,\n        useSSL: true,\n        userName: options.username,\n        password: options.password,\n      };\n\n      // connect the client\n      client.connect(connectOptions);\n    }\n\n    function onConnect() {\n      console.log(\"Connected to HiveMQ broker\");\n      client.subscribe(\"Hello\");\n    }\n\n    function onConnectionLost(responseObject) {\n      if (responseObject.errorCode !== 0) {\n        console.log(\"Connection lost:\", responseObject.errorMessage);\n      }\n    }\n\n    function onMessageArrived(message) {\n      console.log(\"Received message:\", message.payloadString);\n      // setMessages((messages) => [...messages, message.payloadString]);\n    }\n\n    connect();\n    return () => {\n      client.disconnect();\n    };\n  }, []);\n\n  function handleSwitch(data) {}\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-header\">\n        <h3>RELAY CONTROLLER APP</h3>\n      </div>\n      <div className=\"switch-btns\">\n        {Object.values(relayData).map((item, index) => (\n          <div className=\"form-check form-switch\" key={index}>\n            <label className=\"\">{item.name}</label>\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"switch-1\" defaultChecked={item.state} onChange={handleSwitch} />\n          </div>\n        ))}\n      </div>\n      <button className=\"btn btn-primary\">Hello</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}