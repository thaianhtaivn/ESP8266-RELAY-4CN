{"ast":null,"code":"define([\"../../core\", \"../../core/isAttached\"\n\n// css is assumed\n], function (jQuery, isAttached) {\n  \"use strict\";\n\n  // isHiddenWithinTree reports if an element has a non-\"none\" display style (inline and/or\n  // through the CSS cascade), which is useful in deciding whether or not to make it visible.\n  // It differs from the :hidden selector (jQuery.expr.pseudos.hidden) in two important ways:\n  // * A hidden ancestor does not force an element to be classified as hidden.\n  // * Being disconnected from the document does not force an element to be classified as hidden.\n  // These differences improve the behavior of .toggle() et al. when applied to elements that are\n  // detached or contained within hidden ancestors (gh-2404, gh-2863).\n  return function (elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem;\n\n    // Inline style trumps all\n    return elem.style.display === \"none\" || elem.style.display === \"\" &&\n    // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n});","map":{"version":3,"names":["define","jQuery","isAttached","elem","el","style","display","css"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/node_modules/jquery/src/css/var/isHiddenWithinTree.js"],"sourcesContent":["define( [\n\t\"../../core\",\n\t\"../../core/isAttached\"\n\n\t// css is assumed\n], function( jQuery, isAttached ) {\n\t\"use strict\";\n\n\t// isHiddenWithinTree reports if an element has a non-\"none\" display style (inline and/or\n\t// through the CSS cascade), which is useful in deciding whether or not to make it visible.\n\t// It differs from the :hidden selector (jQuery.expr.pseudos.hidden) in two important ways:\n\t// * A hidden ancestor does not force an element to be classified as hidden.\n\t// * Being disconnected from the document does not force an element to be classified as hidden.\n\t// These differences improve the behavior of .toggle() et al. when applied to elements that are\n\t// detached or contained within hidden ancestors (gh-2404, gh-2863).\n\treturn function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n} );\n"],"mappings":"AAAAA,MAAM,CAAE,CACP,YAAY,EACZ;;AAEA;AAAA,CACA,EAAE,UAAUC,MAAM,EAAEC,UAAU,EAAG;EACjC,YAAY;;EAEZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAO,UAAUC,IAAI,EAAEC,EAAE,EAAG;IAE3B;IACA;IACAD,IAAI,GAAGC,EAAE,IAAID,IAAI;;IAEjB;IACA,OAAOA,IAAI,CAACE,KAAK,CAACC,OAAO,KAAK,MAAM,IACnCH,IAAI,CAACE,KAAK,CAACC,OAAO,KAAK,EAAE;IAEzB;IACA;IACA;IACA;IACAJ,UAAU,CAAEC,IAAI,CAAE,IAElBF,MAAM,CAACM,GAAG,CAAEJ,IAAI,EAAE,SAAS,CAAE,KAAK,MAAM;EAC1C,CAAC;AACF,CAAC,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}