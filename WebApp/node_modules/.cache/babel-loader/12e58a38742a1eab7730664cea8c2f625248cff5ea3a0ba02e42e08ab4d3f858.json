{"ast":null,"code":"'use strict';\n\nvar Transform = require('readable-stream').Transform;\nvar duplexify = require('duplexify');\n\n/* global wx */\nvar socketTask;\nvar proxy;\nvar stream;\nfunction buildProxy() {\n  var proxy = new Transform();\n  proxy._write = function (chunk, encoding, next) {\n    socketTask.send({\n      data: chunk.buffer,\n      success: function () {\n        next();\n      },\n      fail: function (errMsg) {\n        next(new Error(errMsg));\n      }\n    });\n  };\n  proxy._flush = function socketEnd(done) {\n    socketTask.close({\n      success: function () {\n        done();\n      }\n    });\n  };\n  return proxy;\n}\nfunction setDefaultOpts(opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost';\n  }\n  if (!opts.path) {\n    opts.path = '/';\n  }\n  if (!opts.wsOptions) {\n    opts.wsOptions = {};\n  }\n}\nfunction buildUrl(opts, client) {\n  var protocol = opts.protocol === 'wxs' ? 'wss' : 'ws';\n  var url = protocol + '://' + opts.hostname + opts.path;\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path;\n  }\n  if (typeof opts.transformWsUrl === 'function') {\n    url = opts.transformWsUrl(url, opts, client);\n  }\n  return url;\n}\nfunction bindEventHandler() {\n  socketTask.onOpen(function () {\n    stream.setReadable(proxy);\n    stream.setWritable(proxy);\n    stream.emit('connect');\n  });\n  socketTask.onMessage(function (res) {\n    var data = res.data;\n    if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, 'utf8');\n    proxy.push(data);\n  });\n  socketTask.onClose(function () {\n    stream.end();\n    stream.destroy();\n  });\n  socketTask.onError(function (res) {\n    stream.destroy(new Error(res.errMsg));\n  });\n}\nfunction buildStream(client, opts) {\n  opts.hostname = opts.hostname || opts.host;\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.');\n  }\n  var websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3 ? 'mqttv3.1' : 'mqtt';\n  setDefaultOpts(opts);\n  var url = buildUrl(opts, client);\n  socketTask = wx.connectSocket({\n    url: url,\n    protocols: [websocketSubProtocol]\n  });\n  proxy = buildProxy();\n  stream = duplexify.obj();\n  stream._destroy = function (err, cb) {\n    socketTask.close({\n      success: function () {\n        cb && cb(err);\n      }\n    });\n  };\n  var destroyRef = stream.destroy;\n  stream.destroy = function () {\n    stream.destroy = destroyRef;\n    var self = this;\n    process.nextTick(function () {\n      socketTask.close({\n        fail: function () {\n          self._destroy(new Error());\n        }\n      });\n    });\n  }.bind(stream);\n  bindEventHandler();\n  return stream;\n}\nmodule.exports = buildStream;","map":{"version":3,"names":["Transform","require","duplexify","socketTask","proxy","stream","buildProxy","_write","chunk","encoding","next","send","data","buffer","success","fail","errMsg","Error","_flush","socketEnd","done","close","setDefaultOpts","opts","hostname","path","wsOptions","buildUrl","client","protocol","url","port","transformWsUrl","bindEventHandler","onOpen","setReadable","setWritable","emit","onMessage","res","ArrayBuffer","Buffer","from","push","onClose","end","destroy","onError","buildStream","host","websocketSubProtocol","protocolId","protocolVersion","wx","connectSocket","protocols","obj","_destroy","err","cb","destroyRef","self","process","nextTick","bind","module","exports"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/node_modules/mqtt/lib/connect/wx.js"],"sourcesContent":["'use strict'\n\nvar Transform = require('readable-stream').Transform\nvar duplexify = require('duplexify')\n\n/* global wx */\nvar socketTask\nvar proxy\nvar stream\n\nfunction buildProxy () {\n  var proxy = new Transform()\n  proxy._write = function (chunk, encoding, next) {\n    socketTask.send({\n      data: chunk.buffer,\n      success: function () {\n        next()\n      },\n      fail: function (errMsg) {\n        next(new Error(errMsg))\n      }\n    })\n  }\n  proxy._flush = function socketEnd (done) {\n    socketTask.close({\n      success: function () {\n        done()\n      }\n    })\n  }\n\n  return proxy\n}\n\nfunction setDefaultOpts (opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost'\n  }\n  if (!opts.path) {\n    opts.path = '/'\n  }\n\n  if (!opts.wsOptions) {\n    opts.wsOptions = {}\n  }\n}\n\nfunction buildUrl (opts, client) {\n  var protocol = opts.protocol === 'wxs' ? 'wss' : 'ws'\n  var url = protocol + '://' + opts.hostname + opts.path\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path\n  }\n  if (typeof (opts.transformWsUrl) === 'function') {\n    url = opts.transformWsUrl(url, opts, client)\n  }\n  return url\n}\n\nfunction bindEventHandler () {\n  socketTask.onOpen(function () {\n    stream.setReadable(proxy)\n    stream.setWritable(proxy)\n    stream.emit('connect')\n  })\n\n  socketTask.onMessage(function (res) {\n    var data = res.data\n\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\n    else data = Buffer.from(data, 'utf8')\n    proxy.push(data)\n  })\n\n  socketTask.onClose(function () {\n    stream.end()\n    stream.destroy()\n  })\n\n  socketTask.onError(function (res) {\n    stream.destroy(new Error(res.errMsg))\n  })\n}\n\nfunction buildStream (client, opts) {\n  opts.hostname = opts.hostname || opts.host\n\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.')\n  }\n\n  var websocketSubProtocol =\n    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\n      ? 'mqttv3.1'\n      : 'mqtt'\n\n  setDefaultOpts(opts)\n\n  var url = buildUrl(opts, client)\n  socketTask = wx.connectSocket({\n    url: url,\n    protocols: [websocketSubProtocol]\n  })\n\n  proxy = buildProxy()\n  stream = duplexify.obj()\n  stream._destroy = function (err, cb) {\n    socketTask.close({\n      success: function () {\n        cb && cb(err)\n      }\n    })\n  }\n\n  var destroyRef = stream.destroy\n  stream.destroy = function () {\n    stream.destroy = destroyRef\n\n    var self = this\n    process.nextTick(function () {\n      socketTask.close({\n        fail: function () {\n          self._destroy(new Error())\n        }\n      })\n    })\n  }.bind(stream)\n\n  bindEventHandler()\n\n  return stream\n}\n\nmodule.exports = buildStream\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}