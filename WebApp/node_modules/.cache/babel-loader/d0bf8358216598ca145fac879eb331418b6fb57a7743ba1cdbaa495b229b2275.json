{"ast":null,"code":"var _jsxFileName = \"/Users/thaitai/Desktop/Work/IoT/relay-web-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.scss\";\nimport { Client } from \"paho-mqtt\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [relayData, setrelayData] = useState([{\n    name: \"RELAY 1\",\n    state: true\n  }, {\n    name: \"RELAY 2\",\n    state: true\n  }, {\n    name: \"RELAY 3\",\n    state: false\n  }, {\n    name: \"RELAY 4\",\n    state: false\n  }]);\n  // const client = new Client(\"mqtts://42c1410bece7497a99cfa15427041510.s2.eu.hivemq.cloud:8333\", \"client-id\");\n  const options = {\n    host: \"42c1410bece7497a99cfa15427041510.s2.eu.hivemq.cloud\",\n    port: 8883,\n    protocol: \"mqtts\",\n    username: \"thaianhtaivn\",\n    password: \"<your_password>\",\n    clientId: \"my-client-id\"\n  };\n  const client = new Client(options.host, options.port, options.clientId);\n  function connect() {\n    // set callback handlers\n    client.onConnectionLost = onConnectionLost;\n    client.onMessageArrived = onMessageArrived;\n\n    // set options\n    const connectOptions = {\n      onSuccess: onConnect,\n      useSSL: true,\n      userName: options.username,\n      password: options.password\n    };\n\n    // connect the client\n    client.connect(connectOptions);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"RELAY CONTROLLER APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch-btns\",\n      children: Object.values(relayData).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"switch-1\",\n          defaultChecked: item.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6Vj25bHRJhQ1NOleztTJ6eJTBYA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Client","useState","useEffect","jsxDEV","_jsxDEV","App","_s","relayData","setrelayData","name","state","options","host","port","protocol","username","password","clientId","client","connect","onConnectionLost","onMessageArrived","connectOptions","onSuccess","onConnect","useSSL","userName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","item","index","type","id","defaultChecked","_c","$RefreshReg$"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/src/App.js"],"sourcesContent":["import \"./App.scss\";\nimport { Client } from \"paho-mqtt\";\nimport { useState, useEffect } from \"react\";\nfunction App() {\n  const [relayData, setrelayData] = useState([\n    {\n      name: \"RELAY 1\",\n      state: true,\n    },\n    {\n      name: \"RELAY 2\",\n      state: true,\n    },\n    {\n      name: \"RELAY 3\",\n      state: false,\n    },\n    {\n      name: \"RELAY 4\",\n      state: false,\n    },\n  ]);\n  // const client = new Client(\"mqtts://42c1410bece7497a99cfa15427041510.s2.eu.hivemq.cloud:8333\", \"client-id\");\n  const options = {\n    host: \"42c1410bece7497a99cfa15427041510.s2.eu.hivemq.cloud\",\n    port: 8883,\n    protocol: \"mqtts\",\n    username: \"thaianhtaivn\",\n    password: \"<your_password>\",\n    clientId: \"my-client-id\",\n  };\n  const client = new Client(options.host, options.port, options.clientId);\n  function connect() {\n    // set callback handlers\n    client.onConnectionLost = onConnectionLost;\n    client.onMessageArrived = onMessageArrived;\n\n    // set options\n    const connectOptions = {\n      onSuccess: onConnect,\n      useSSL: true,\n      userName: options.username,\n      password: options.password,\n    };\n\n    // connect the client\n    client.connect(connectOptions);\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"app-header\">\n        <h3>RELAY CONTROLLER APP</h3>\n      </div>\n      <div className=\"switch-btns\">\n        {Object.values(relayData).map((item, index) => (\n          <div className=\"form-check form-switch\" key={index}>\n            <label className=\"\">{item.name}</label>\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"switch-1\" defaultChecked={item.state} />\n          </div>\n        ))}\n      </div>\n      <button className=\"btn btn-primary\">Hello</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}