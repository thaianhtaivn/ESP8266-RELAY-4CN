{"ast":null,"code":"'use strict';\n\nvar Transform = require('readable-stream').Transform;\nvar duplexify = require('duplexify');\nvar base64 = require('base64-js');\n\n/* global FileReader */\nvar my;\nvar proxy;\nvar stream;\nvar isInitialized = false;\nfunction buildProxy() {\n  var proxy = new Transform();\n  proxy._write = function (chunk, encoding, next) {\n    my.sendSocketMessage({\n      data: chunk.buffer,\n      success: function () {\n        next();\n      },\n      fail: function () {\n        next(new Error());\n      }\n    });\n  };\n  proxy._flush = function socketEnd(done) {\n    my.closeSocket({\n      success: function () {\n        done();\n      }\n    });\n  };\n  return proxy;\n}\nfunction setDefaultOpts(opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost';\n  }\n  if (!opts.path) {\n    opts.path = '/';\n  }\n  if (!opts.wsOptions) {\n    opts.wsOptions = {};\n  }\n}\nfunction buildUrl(opts, client) {\n  var protocol = opts.protocol === 'alis' ? 'wss' : 'ws';\n  var url = protocol + '://' + opts.hostname + opts.path;\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path;\n  }\n  if (typeof opts.transformWsUrl === 'function') {\n    url = opts.transformWsUrl(url, opts, client);\n  }\n  return url;\n}\nfunction bindEventHandler() {\n  if (isInitialized) return;\n  isInitialized = true;\n  my.onSocketOpen(function () {\n    stream.setReadable(proxy);\n    stream.setWritable(proxy);\n    stream.emit('connect');\n  });\n  my.onSocketMessage(function (res) {\n    if (typeof res.data === 'string') {\n      var array = base64.toByteArray(res.data);\n      var buffer = Buffer.from(array);\n      proxy.push(buffer);\n    } else {\n      var reader = new FileReader();\n      reader.addEventListener('load', function () {\n        var data = reader.result;\n        if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, 'utf8');\n        proxy.push(data);\n      });\n      reader.readAsArrayBuffer(res.data);\n    }\n  });\n  my.onSocketClose(function () {\n    stream.end();\n    stream.destroy();\n  });\n  my.onSocketError(function (res) {\n    stream.destroy(res);\n  });\n}\nfunction buildStream(client, opts) {\n  opts.hostname = opts.hostname || opts.host;\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.');\n  }\n  var websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3 ? 'mqttv3.1' : 'mqtt';\n  setDefaultOpts(opts);\n  var url = buildUrl(opts, client);\n  my = opts.my;\n  my.connectSocket({\n    url: url,\n    protocols: websocketSubProtocol\n  });\n  proxy = buildProxy();\n  stream = duplexify.obj();\n  bindEventHandler();\n  return stream;\n}\nmodule.exports = buildStream;","map":{"version":3,"names":["Transform","require","duplexify","base64","my","proxy","stream","isInitialized","buildProxy","_write","chunk","encoding","next","sendSocketMessage","data","buffer","success","fail","Error","_flush","socketEnd","done","closeSocket","setDefaultOpts","opts","hostname","path","wsOptions","buildUrl","client","protocol","url","port","transformWsUrl","bindEventHandler","onSocketOpen","setReadable","setWritable","emit","onSocketMessage","res","array","toByteArray","Buffer","from","push","reader","FileReader","addEventListener","result","ArrayBuffer","readAsArrayBuffer","onSocketClose","end","destroy","onSocketError","buildStream","host","websocketSubProtocol","protocolId","protocolVersion","connectSocket","protocols","obj","module","exports"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/node_modules/mqtt/lib/connect/ali.js"],"sourcesContent":["'use strict'\n\nvar Transform = require('readable-stream').Transform\nvar duplexify = require('duplexify')\nvar base64 = require('base64-js')\n\n/* global FileReader */\nvar my\nvar proxy\nvar stream\nvar isInitialized = false\n\nfunction buildProxy () {\n  var proxy = new Transform()\n  proxy._write = function (chunk, encoding, next) {\n    my.sendSocketMessage({\n      data: chunk.buffer,\n      success: function () {\n        next()\n      },\n      fail: function () {\n        next(new Error())\n      }\n    })\n  }\n  proxy._flush = function socketEnd (done) {\n    my.closeSocket({\n      success: function () {\n        done()\n      }\n    })\n  }\n\n  return proxy\n}\n\nfunction setDefaultOpts (opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost'\n  }\n  if (!opts.path) {\n    opts.path = '/'\n  }\n\n  if (!opts.wsOptions) {\n    opts.wsOptions = {}\n  }\n}\n\nfunction buildUrl (opts, client) {\n  var protocol = opts.protocol === 'alis' ? 'wss' : 'ws'\n  var url = protocol + '://' + opts.hostname + opts.path\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path\n  }\n  if (typeof (opts.transformWsUrl) === 'function') {\n    url = opts.transformWsUrl(url, opts, client)\n  }\n  return url\n}\n\nfunction bindEventHandler () {\n  if (isInitialized) return\n\n  isInitialized = true\n\n  my.onSocketOpen(function () {\n    stream.setReadable(proxy)\n    stream.setWritable(proxy)\n    stream.emit('connect')\n  })\n\n  my.onSocketMessage(function (res) {\n    if (typeof res.data === 'string') {\n      var array = base64.toByteArray(res.data)\n      var buffer = Buffer.from(array)\n      proxy.push(buffer)\n    } else {\n      var reader = new FileReader()\n      reader.addEventListener('load', function () {\n        var data = reader.result\n\n        if (data instanceof ArrayBuffer) data = Buffer.from(data)\n        else data = Buffer.from(data, 'utf8')\n        proxy.push(data)\n      })\n      reader.readAsArrayBuffer(res.data)\n    }\n  })\n\n  my.onSocketClose(function () {\n    stream.end()\n    stream.destroy()\n  })\n\n  my.onSocketError(function (res) {\n    stream.destroy(res)\n  })\n}\n\nfunction buildStream (client, opts) {\n  opts.hostname = opts.hostname || opts.host\n\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.')\n  }\n\n  var websocketSubProtocol =\n    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\n      ? 'mqttv3.1'\n      : 'mqtt'\n\n  setDefaultOpts(opts)\n\n  var url = buildUrl(opts, client)\n  my = opts.my\n  my.connectSocket({\n    url: url,\n    protocols: websocketSubProtocol\n  })\n\n  proxy = buildProxy()\n  stream = duplexify.obj()\n\n  bindEventHandler()\n\n  return stream\n}\n\nmodule.exports = buildStream\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}