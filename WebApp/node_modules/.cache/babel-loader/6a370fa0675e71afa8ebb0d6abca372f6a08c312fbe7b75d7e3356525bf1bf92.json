{"ast":null,"code":"'use strict';\n\nvar net = require('net');\nvar debug = require('debug')('mqttjs:tcp');\n\n/*\n  variables port and host can be removed since\n  you have all required information in opts object\n*/\nfunction streamBuilder(client, opts) {\n  var port, host;\n  opts.port = opts.port || 1883;\n  opts.hostname = opts.hostname || opts.host || 'localhost';\n  port = opts.port;\n  host = opts.hostname;\n  debug('port %d and host %s', port, host);\n  return net.createConnection(port, host);\n}\nmodule.exports = streamBuilder;","map":{"version":3,"names":["net","require","debug","streamBuilder","client","opts","port","host","hostname","createConnection","module","exports"],"sources":["/Users/thaitai/Desktop/Work/IoT/relay-web-app/node_modules/mqtt/lib/connect/tcp.js"],"sourcesContent":["'use strict'\nvar net = require('net')\nvar debug = require('debug')('mqttjs:tcp')\n\n/*\n  variables port and host can be removed since\n  you have all required information in opts object\n*/\nfunction streamBuilder (client, opts) {\n  var port, host\n  opts.port = opts.port || 1883\n  opts.hostname = opts.hostname || opts.host || 'localhost'\n\n  port = opts.port\n  host = opts.hostname\n\n  debug('port %d and host %s', port, host)\n  return net.createConnection(port, host)\n}\n\nmodule.exports = streamBuilder\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AACxB,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC;;AAE1C;AACA;AACA;AACA;AACA,SAASE,aAAaA,CAAEC,MAAM,EAAEC,IAAI,EAAE;EACpC,IAAIC,IAAI,EAAEC,IAAI;EACdF,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACC,IAAI,IAAI,IAAI;EAC7BD,IAAI,CAACG,QAAQ,GAAGH,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACE,IAAI,IAAI,WAAW;EAEzDD,IAAI,GAAGD,IAAI,CAACC,IAAI;EAChBC,IAAI,GAAGF,IAAI,CAACG,QAAQ;EAEpBN,KAAK,CAAC,qBAAqB,EAAEI,IAAI,EAAEC,IAAI,CAAC;EACxC,OAAOP,GAAG,CAACS,gBAAgB,CAACH,IAAI,EAAEC,IAAI,CAAC;AACzC;AAEAG,MAAM,CAACC,OAAO,GAAGR,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}